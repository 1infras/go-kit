#This docker-compose.yml uses for testing at local
version: "3"

volumes:
  elasticsearch:
    driver: local
  apmserver:
    driver: local
  consul:
    driver: local

networks:
  go-kit:
    driver: bridge

services:
  # ElasticSearch Stack
  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:7.9.3
    environment:
      - cluster.name=es-cluster
      - xpack.monitoring.collection.enabled=true
      - cluster.routing.allocation.disk.threshold_enabled=false
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-XX:UseAVX=2 -Xms512M -Xmx512M"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elasticsearch:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks:
      - go-kit
    healthcheck:
      interval: 20s
      retries: 10
      test: curl -s http://localhost:9200/_cluster/health | grep -vq '"status":"red"'

  # Kibana
  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:7.9.3
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    networks:
      - go-kit
    healthcheck:
      interval: 10s
      retries: 20
      test: curl --write-out 'HTTP %{http_code}' --fail --silent --output /dev/null http://localhost:5601/api/status
    links:
      - elasticsearch

  # APM Server
  apm-server:
    container_name: apm-server
    image: docker.elastic.co/apm/apm-server:7.9.3
    ports:
      - 8200:8200
    depends_on:
      - elasticsearch
    cap_add: [ "CHOWN", "DAC_OVERRIDE", "SETGID", "SETUID" ]
    cap_drop: [ "ALL" ]
    networks:
      - go-kit
    command: >
      apm-server -e
        -E apm-server.rum.enabled=true
        -E setup.kibana.host=kibana:5601
        -E setup.template.settings.index.number_of_replicas=0
        -E apm-server.kibana.enabled=true
        -E apm-server.kibana.host=kibana:5601
        -E output.elasticsearch.hosts=["elasticsearch:9200"]
    healthcheck:
      interval: 10s
      retries: 12
      test: curl --write-out 'HTTP %{http_code}' --fail --silent --output /dev/null http://localhost:8200/
    links:
      - elasticsearch
      - kibana
  # Redis
  redis:
    container_name: redis
    image: bitnami/redis:latest
    ports:
      - 6379:6379
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    networks:
      - go-kit

  # Consul
  consul:
    container_name: consul
    image: consul:latest
    ports:
      - 8500:8500
      - 8600:8600/udp
    command: agent -server -ui -bind 0.0.0.0 -client 0.0.0.0 -data-dir /consul/data -node=consul-1
    networks:
      - go-kit
    volumes:
      - consul:/consul/data